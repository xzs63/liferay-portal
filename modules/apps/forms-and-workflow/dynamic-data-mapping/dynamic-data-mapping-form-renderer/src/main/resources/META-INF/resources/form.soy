{namespace ddm}

/**
 * Defines the base delegated template for the any field.
 */
{deltemplate ddm.field}
{/deltemplate}

/**
 * Prints a list of fields.
 */
{template .fields}
	{@param fields: list<?>}

	{foreach $field in $fields}
		{let $variant: $field.type /}

		<div class="clearfix {if not $field.visible}hide{/if} lfr-ddm-form-field-container">
			{delcall ddm.field variant="$variant" data="$field" /}
		</div>
	{/foreach}
{/template}

/**
 * Prints the JavaScript form renderer.
 */
{template .form_renderer_js}
	{@param containerId: string}
	{@param context: ?}
	{@param evaluatorURL: string}
	{@param fieldTypes: string}
	{@param portletNamespace: string}
	{@param readOnly: bool}

	<script type="text/javascript">
		AUI().use(
			'liferay-ddm-form-renderer',
			'liferay-ddm-form-renderer-field',
			'liferay-ddm-soy-template-util',
			function(A) {lb}
				var SoyTemplateUtil = Liferay.DDM.SoyTemplateUtil;

				SoyTemplateUtil.loadModules(
					function() {lb}
						Liferay.DDM.Renderer.FieldTypes.register({$fieldTypes});

						{call .render_form data="all" /}
					{rb}
				);

				var destroyFormHandle = function(event) {lb}
					var form = Liferay.component('{$containerId}DDMForm');

					var portlet = event.portlet;

					if (portlet && portlet.contains(form.get('container'))) {lb}
						form.destroy();

						Liferay.detach('destroyPortlet', destroyFormHandle);
					{rb}
				{rb};

				Liferay.on('destroyPortlet', destroyFormHandle);
			{rb}
		);
	</script>
{/template}

/**
 * Prints render form script
 */
{template .render_form kind="js"}
	{@param containerId: string}
	{@param context: ?}
	{@param evaluatorURL: string}
	{@param portletNamespace: string}
	{@param readOnly: bool}

	var form = Liferay.component(
		'{$containerId}DDMForm',
		new Liferay.DDM.Renderer.Form(
			{lb}
				container: '#{$containerId}',
				context: {$context},
				evaluatorURL: '{$evaluatorURL}',
				portletNamespace: '{$portletNamespace}',
				readOnly: {if $readOnly}true{else}false{/if}
			{rb}
		).render()
	);

	Liferay.fire(
	'{$containerId}DDMForm:render',
		{lb}
			form: form
		{rb}
	);
{/template}

/**
 * Prints all rows.
 */
{template .form_rows}
	{@param rows: list<[columns: list<[size: int, fields: list<?>]>]>}

	{foreach $row in $rows}
		<div class="row">
			{call .form_row_columns data="all"}
				{param columns: $row.columns /}
			{/call}
		</div>
	{/foreach}
{/template}

/**
 * Prints a column.
 */
{template .form_row_column}
	{@param column: [size: int, fields: list<?>]}

	<div class="col-md-{$column.size}">
		{call .fields data="all"}
			{param fields: $column.fields /}
		{/call}
	</div>
{/template}

/**
 * Prints all columns.
 */
{template .form_row_columns}
	{@param columns: list<[size: int, fields: list<?>]>}

	{foreach $column in $columns}
		{call .form_row_column data="all"}
			{param column: $column /}
		{/call}
	{/foreach}
{/template}

/**
 * Prints the form fields required message warning.
 */
{template .required_warning_message}
	{@param showRequiredFieldsWarning: bool}
	{@param requiredFieldsWarningMessageHTML: html}

	{if $showRequiredFieldsWarning}
		{$requiredFieldsWarningMessageHTML}
	{/if}
{/template}

/**
 * Prints a form with pagination.
 */
{template .wizard_form}
	{@param containerId: string}
	{@param pages: list<[
		title: string,
		description: string,
		showRequiredFieldsWarning: bool,
		rows: list<[columns: list<[size: int, fields: list<?>]>]>
	]>}
	{@param requiredFieldsWarningMessageHTML: html}
	{@param submitLabel: string}
	{@param showSubmitButton: bool}
	{@param strings: [previous: string, next: string]}

	<div class="lfr-ddm-form-container" id="{$containerId}">
		<div class="lfr-ddm-form-content">
			{if length($pages) > 1}
				<div class="lfr-ddm-form-wizard">
					<ul class="multi-step-progress-bar multi-step-progress-bar-collapse">
						{foreach $page in $pages}
							<li {if isFirst($page)}class="active"{/if}>
								<div class="progress-bar-title">{$page.title}</div>

								<div class="divider"></div>

								<div class="progress-bar-step">{index($page) + 1}</div>
							</li>
						{/foreach}
					</ul>
				</div>
			{/if}

			<div class="lfr-ddm-form-pages">
				{foreach $page in $pages}
					<div class="{if isFirst($page)}active{/if} lfr-ddm-form-page">
						{if $page.title}
							<h3 class="lfr-ddm-form-page-title">{$page.title}</h3>
						{/if}

						{if $page.description}
							<h4 class="lfr-ddm-form-page-description">{$page.description}</h4>
						{/if}

						{call .required_warning_message data="all"}
							{param showRequiredFieldsWarning: $page.showRequiredFieldsWarning /}
							{param requiredFieldsWarningMessageHTML: $requiredFieldsWarningMessageHTML /}
						{/call}

						{call .form_rows data="all"}
							{param rows: $page.rows /}
						{/call}
					</div>
				{/foreach}
			</div>
		</div>

		<div class="lfr-ddm-form-pagination-controls">
			<button class="btn btn-primary hide lfr-ddm-form-pagination-prev" type="button">
				<i class="icon-angle-left"></i> {$strings.previous}
			</button>

			<button class="btn btn-primary{if length($pages) == 1} hide{/if} lfr-ddm-form-pagination-next pull-right" type="button">
				{$strings.next} <i class="icon-angle-right"></i>
			</button>

			{if $showSubmitButton}
				<button class="btn btn-primary{if length($pages) > 1} hide{/if} lfr-ddm-form-submit pull-right" disabled type="submit">{$submitLabel}</button>
			{/if}
		</div>
	</div>
{/template}

/**
 * Prints a form with pagination.
 */
{template .paginated_form}
	{@param containerId: string}
	{@param pages: list<[
		title: string,
		description: string,
		showRequiredFieldsWarning: bool,
		rows: list<[columns: list<[size: int, fields: list<?>]>]>
	]>}
	{@param requiredFieldsWarningMessageHTML: html}
	{@param showSubmitButton: bool}
	{@param strings: [previous: string, next: string]}
	{@param submitLabel: string}

	<div class="lfr-ddm-form-container" id="{$containerId}">
		<div class="lfr-ddm-form-content">
			<div class="lfr-ddm-form-pages">
				{foreach $page in $pages}
					<div class="{if isFirst($page)}active{/if} lfr-ddm-form-page">
						{if $page.title}
							<h3 class="lfr-ddm-form-page-title">{$page.title}</h3>
						{/if}

						{if $page.description}
							<h4 class="lfr-ddm-form-page-description">{$page.description}</h4>
						{/if}

						{call .required_warning_message data="all"}
							{param showRequiredFieldsWarning: $page.showRequiredFieldsWarning /}
							{param requiredFieldsWarningMessageHTML: $requiredFieldsWarningMessageHTML /}
						{/call}

						{call .form_rows data="all"}
							{param rows: $page.rows /}
						{/call}
					</div>
				{/foreach}
			</div>

			{if length($pages) > 1}
				<div class="lfr-ddm-form-paginated">
					<ul class="pagination pagination-content">
						{foreach $page in $pages}
							<li {if isFirst($page)}class="active"{/if}>
								<a href="#">{index($page) + 1}</a>
							</li>
						{/foreach}
					</ul>
				</div>
			{/if}
		</div>

		<div class="lfr-ddm-form-pagination-controls">
			<button class="btn btn-primary hide lfr-ddm-form-pagination-prev" type="button">
				<i class="icon-angle-left"></i> {$strings.previous}
			</button>

			<button class="btn btn-primary{if length($pages) == 1} hide{/if} lfr-ddm-form-pagination-next pull-right" type="button">
				{$strings.next} <i class="icon-angle-right"></i>
			</button>

			{if $showSubmitButton}
				<button class="btn btn-primary{if length($pages) > 1} hide{/if} lfr-ddm-form-submit pull-right" disabled type="submit">{$submitLabel}</button>
			{/if}
		</div>
	</div>
{/template}

/**
 * Prints a simple form with just one page.
 */
{template .simple_form}
	{@param containerId: string}
	{@param pages: list<[
		title: string,
		description: string,
		showRequiredFieldsWarning: bool,
		rows: list<[columns: list<[size: int, fields: list<?>]>]>
	]>}
	{@param requiredFieldsWarningMessageHTML: html}

	<div class="lfr-ddm-form-container" id="{$containerId}">
		<div class="lfr-ddm-form-fields">
			{foreach $page in $pages}
				{call .required_warning_message data="all"}
					{param showRequiredFieldsWarning: $page.showRequiredFieldsWarning /}
					{param requiredFieldsWarningMessageHTML: $requiredFieldsWarningMessageHTML /}
				{/call}

				{call .form_rows data="all"}
					{param rows: $page.rows /}
				{/call}
			{/foreach}
		</div>
	</div>
{/template}

/**
 * Prints a form with tabs.
 */
{template .tabbed_form}
	{@param containerId: string}
	{@param pages: list<[
		title: string,
		description: string,
		showRequiredFieldsWarning: bool,
		rows: list<[columns: list<[size: int, fields: list<?>]>]>
	]>}
	{@param requiredFieldsWarningMessageHTML: html}

	<div class="lfr-ddm-form-container" id="{$containerId}">
		<div class="lfr-ddm-form-tabs">
			<ul class="nav navbar-nav">
				{foreach $page in $pages}
					<li>
						<a href="javascript:;">{$page.title}</a>
					</li>
				{/foreach}
			</ul>

			<div class="tab-content lfr-ddm-form-tabs-content">
				{foreach $page in $pages}
					<div class="lfr-ddm-form-page tab-pane {if isFirst($page)}active{/if}">
						{call .required_warning_message data="all"}
							{param showRequiredFieldsWarning: $page.showRequiredFieldsWarning /}
							{param requiredFieldsWarningMessageHTML: $requiredFieldsWarningMessageHTML /}
						{/call}

						{call .form_rows data="all"}
							{param rows: $page.rows /}
						{/call}
					</div>
				{/foreach}
			</div>
		</div>
	</div>
{/template}

/**
 * Prints an empty form tab.
 */
{template .tabbed_form_frame}
	{@param? active: ?}

	<div class="lfr-ddm-form-page tab-pane {if $active}active{/if}"></div>
{/template}

/**
 * Prints the settings form.
 */
{template .settings_form}
	{@param containerId: string}
	{@param pages: list<[
		title: string,
		description: string,
		showRequiredFieldsWarning: bool,
		rows: list<[columns: list<[size: int, fields: list<?>]>]>
	]>}

	<div class="lfr-ddm-form-container" id="{$containerId}">
		<div class="lfr-ddm-settings-form">
			{foreach $page in $pages}
				<div class="lfr-ddm-form-page{if isFirst($page)} active basic{/if}{if isLast($page)} advanced{/if}">
					{call .form_rows data="all"}
						{param rows: $page.rows /}
					{/call}
				</div>
			{/foreach}
		</div>
	</div>
{/template}