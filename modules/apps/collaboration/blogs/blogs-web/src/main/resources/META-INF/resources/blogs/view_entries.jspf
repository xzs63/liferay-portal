<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<liferay-asset:categorization-filter
	assetType="entries"
	portletURL="<%= portletURL %>"
/>

<c:if test="<%= results.isEmpty() %>">
	<liferay-ui:empty-result-message message="no-entries-were-found" />
</c:if>

<%
Map<String, Object> contextObjects = new HashMap<String, Object>();

contextObjects.put("blogsPortletInstanceConfiguration", blogsPortletInstanceConfiguration);
contextObjects.put("blogsPortletInstanceSettingsHelper", blogsPortletInstanceSettingsHelper);

List<BlogsEntry> blogsEntries = _convertToBlogEntries(results);
%>

<liferay-ddm:template-renderer className="<%= BlogsEntry.class.getName() %>" contextObjects="<%= contextObjects %>" displayStyle="<%= blogsPortletInstanceConfiguration.displayStyle() %>" displayStyleGroupId="<%= blogsPortletInstanceSettingsHelper.getDisplayStyleGroupId() %>" entries="<%= blogsEntries %>">
	<div class="widget-mode-simple">

		<%
		long[] classPKs = ListUtil.toLongArray(blogsEntries, BlogsEntry.ENTRY_ID_ACCESSOR);

		Map<Long, RatingsEntry> ratingsEntries = null;
		Map<Long, RatingsStats> ratingsStats = RatingsStatsLocalServiceUtil.getStats(BlogsEntry.class.getName(), classPKs);

		if (ratingsStats.isEmpty()) {
			ratingsEntries = Collections.emptyMap();
		}
		else {
			ratingsEntries = RatingsEntryLocalServiceUtil.getEntries(themeDisplay.getUserId(), BlogsEntry.class.getName(), classPKs);
		}

		int index = 0;

		for (Object result : results) {
			BlogsEntry entry = blogsEntries.get(index);

			AssetEntry assetEntry = null;

			if (result instanceof AssetEntry) {
				assetEntry = (AssetEntry)result;

				assetHelper.addLayoutTags(request, assetEntry.getTags());
			}

			index++;

			request.setAttribute("view_entry_content.jsp-searchContainer", searchContainer);

			request.setAttribute("view_entry_content.jsp-entry", entry);

			request.setAttribute("view_entry_content.jsp-assetEntry", assetEntry);

			request.setAttribute("view_entry_content.jsp-ratingsEntry", ratingsEntries.get(entry.getEntryId()));
			request.setAttribute("view_entry_content.jsp-ratingsStats", ratingsStats.get(entry.getEntryId()));
		%>

			<liferay-util:include page="/blogs/view_entry_content.jsp" servletContext="<%= application %>" />

		<%
		}
		%>

	</div>
</liferay-ddm:template-renderer>

<liferay-ui:search-paginator searchContainer="<%= searchContainer %>" />

<%!
private List<BlogsEntry> _convertToBlogEntries(List results) throws PortalException, SystemException {
	if (results.isEmpty() || (results.get(0) instanceof BlogsEntry)) {
		return results;
	}

	List<BlogsEntry> entries = new ArrayList<BlogsEntry>(results.size());

	for (Object result : results) {
		AssetEntry assetEntry = (AssetEntry)result;

		BlogsEntry entry = BlogsEntryLocalServiceUtil.getEntry(assetEntry.getClassPK());

		entries.add(entry);
	}

	return entries;
}
%>