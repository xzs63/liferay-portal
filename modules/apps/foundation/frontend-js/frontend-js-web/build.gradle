import com.liferay.gradle.util.FileUtil
import com.liferay.gradle.util.copy.StripPathSegmentsAction

configurations {
	jQuery
	lodash
}

task buildClay(type: Copy)
task buildJQuery(type: Copy)
task buildJQueryPluginsForm
task buildLiferayAMDLoader(type: Copy)
task buildLodash(type: Copy)
task buildSvg4everybody(type: Copy)

String jqueryPluginsFormVersion = "3.51"
String jQueryVersion = "3.3.1"
String lodashVersion = "4.17.4"

File jsDestinationDir = file("tmp/META-INF/resources")

buildClay {
	File clayDestinationDir = new File(jsDestinationDir, "clay")

	dependsOn npmInstall

	doFirst {
		delete clayDestinationDir
	}

	eachFile new StripPathSegmentsAction(3)

	from npmInstall.nodeModulesDir
	include "clay/lib/js/"
	includeEmptyDirs = false
	into clayDestinationDir
}

buildJQuery {
	eachFile new StripPathSegmentsAction(6)

	from {
		zipTree(configurations.jQuery.singleFile)
	}

	include "META-INF/resources/webjars/jquery/${jQueryVersion}/dist/jquery.js"
	includeEmptyDirs = false
	into new File(jsDestinationDir, "jquery")
}

buildJQueryPluginsForm {
	File jQueryPluginsFormJsFile = file("src/main/resources/META-INF/resources/jquery/form.js")

	doLast {
		FileUtil.get(project, "https://raw.githubusercontent.com/malsup/form/${jqueryPluginsFormVersion}/jquery.form.js", jQueryPluginsFormJsFile)

		String text = jQueryPluginsFormJsFile.text

		text = text.replace("typeof define === 'function'", "false && typeof define === 'function'")

		text = ";(function(jQuery){" + System.getProperty("line.separator") + text + '})(AUI.$);'

		jQueryPluginsFormJsFile.text = text
	}

	onlyIf {
		!jQueryPluginsFormJsFile.exists()
	}
}

buildLiferayAMDLoader {
	dependsOn npmInstall
	eachFile new StripPathSegmentsAction(3)
	from npmInstall.nodeModulesDir

	include "liferay-amd-loader/build/loader/loader.js.map"
	include "liferay-amd-loader/build/loader/loader.js"

	includeEmptyDirs = false
	into new File(jsDestinationDir, "loader")
}

buildLodash {
	eachFile new StripPathSegmentsAction(5)

	filter {
		String line ->

		line.replace "typeof define == 'function'", "false && typeof define == 'function'"
	}

	from {
		zipTree(configurations.lodash.singleFile)
	}

	include "META-INF/resources/webjars/lodash/${lodashVersion}/lodash.js"
	includeEmptyDirs = false
	into new File(jsDestinationDir, "lodash")
}

buildSvg4everybody {
	dependsOn npmInstall
	eachFile new StripPathSegmentsAction(2)

	filter {
		String line ->

		line.replace "\"function\" == typeof define", "false && \"function\" == typeof define"
	}

	from npmInstall.nodeModulesDir
	include "svg4everybody/dist/svg4everybody.js"
	includeEmptyDirs = false
	into new File(jsDestinationDir, "misc")
}

classes {
	dependsOn buildClay
	dependsOn buildJQuery
	dependsOn buildJQueryPluginsForm
	dependsOn buildLiferayAMDLoader
	dependsOn buildLodash
	dependsOn buildSvg4everybody
}

clean {
	delete "tmp"
}

dependencies {
	jQuery group: "org.webjars.npm", name: "jquery", transitive: false, version: jQueryVersion

	lodash group: "org.webjars.bower", name: "lodash", transitive: false, version: lodashVersion

	provided group: "com.liferay", name: "com.liferay.petra.lang", version: "1.0.0"
	provided group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "2.11.0"
	provided group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "2.20.0"
	provided group: "com.liferay.portal", name: "com.liferay.util.taglib", version: "2.6.0"
	provided group: "javax.portlet", name: "portlet-api", version: "2.0"
	provided group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	provided group: "javax.servlet.jsp", name: "javax.servlet.jsp-api", version: "2.3.1"
	provided group: "org.osgi", name: "org.osgi.core", version: "5.0.0"
	provided group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"
}